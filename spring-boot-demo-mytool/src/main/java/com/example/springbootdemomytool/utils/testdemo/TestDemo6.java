package com.example.springbootdemomytool.utils.testdemo;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * @ClassName TestDemo6
 * @Description
 * @Author H
 * @Date 2021/3/11 11:51
 * @Version 1.0
 */
public class TestDemo6 {

    public static void main(String[] args) {
        List<Integer> listA = Arrays.asList(554497,554683,554684,554685,554686,554687,554688,554689,554690,554691,554692,554693,554694,554923,554924,554925,554926,554927,554928,555277,555278,555279,555280,555281,555282,555541,555542,555543,555544,555545,555546,555547,555548,555549,555550,555551,555552,556129,556130,556131,556132,556133,556134,556231,556555,556556,556557,556558,556559,556560,556561,556562,556563,556564,556565,556566,556711,556712,556713,556714,556715,556716,556717,556718,556719,556720,556721,556722,556885,557311,557312,557313,557314,557315,557316,557317,557318,557319,557320,557321,557322,557803,557857,557905,558127,558139,558619,558620,558621,558622,558623,558624,558625,558626,558627,558628,558629,558630,558679,558680,558681,558682,558683,558684,560215,560335,560336,560337,560338,560339,560340,560341,560342,560343,560344,560345,560346,560359,560479,561229,561230,561231,561232,561233,561234,561325,561343,561379,561733,561937,561943,561955,562003,562004,562005,562006,562007,562008,562009,562010,562011,562012,562013,562014,562015,562045,562046,562047,562048,562049,562050,562051,562052,562053,562054,562055,562056,562057,562058,562059,562060,562061,562062,562063,562064,562065,562066,562067,562068,562273,562669,563059,563060,563061,563062,563063,563064,563065,563066,563067,563068,563069,563070,563341,563342,563343,563344,563345,563346,563347,563348,563349,563350,563351,563352,563383,563575,563576,563577,563578,563579,563580,563701,564019,564031,564319,564320,564321,564322,564323,564324,564331,564332,564333,564334,564335,564336,564493,564673,564674,564675,564676,564677,564678,564931,565327,565328,565329,565330,565331,565332,565369,565370,565371,565372,565373,565374,565381,565729,566413,566414,566415,566416,566417,566418,566419,566420,566421,566422,566423,566424,566647,566671,566672,566673,566674,566675,566676,566677,566678,566679,566680,566681,566682,567451,567697,567698,567699,567700,567701,567702,568369,568370,568371,568372,568373,568374,568375,568376,568377,568378,568379,568380,568891,568892,568893,568894,568895,568896,569197,569198,569199,569200,569201,569202,570019,570020,570021,570022,570023,570024,570025,570026,570027,570028,570029,570030,570145,570146,570147,570148,570149,570150,570151,570152,570153,570154,570155,570156,570415,570416,570417,570418,570419,570420,570421,570422,570423,570424,570425,570426,570667,570889,571195,571273,571274,571275,571276,571277,571278,571279,571280,571281,571282,571283,571284,571783,571784,571785,571786,571787,571788,571789,571790,571791,571792,571793,571794,571951,571952,571953,571954,571955,571956,572521,572522,572523,572524,572525,572526,573421,574531,574915,574916,574917,574918,574919,574920,575029,575161,575162,575163,575164,575165,575166,575167,575168,575169,575170,575171,575172,575515,575581,576805,576806,576807,576808,576809,576810,576811,576812,576813,576814,576815,576816,579049,579050,579051,579052,579053,579054,579571,579572,579573,579574,579575,579576,579703,581137,581138,581139,581140,581141,581142,582817,583327,583328,583329,583330,583331,583332,583333,583334,583335,583336,583337,583338,584389,585409,585457,585787,585788,585789,585790,585791,585792,585793,585794,585795,585796,585797,585798,586483,586484,586485,586486,586487,586488,586489,586490,586491,586492,586493,586494,586567,587899,588643,589621,589622,589623,589624,589625,589626,589627,589628,589629,589630,589631,589632,589633,590173,590353,590779,590983,591265,591266,591267,591268,591269,591270,591631,591847,591848,591849,591850,591851,591852,591853,591854,591855,591856,591857,591858,592171,592172,592173,592174,592175,592176,592507,594049,594823,596083,596084,596085,596086,596087,596088,598051,598651,598652,598653,598654,598655,598656,599983,602965,604105);

        List<Integer> listB = Arrays.asList(554497,554683,554684,554685,554686,554687,554688,554689,554690,554691,554692,554693,554694,554923,554924,554925,554926,554927,554928,555277,555278,555279,555280,555281,555282,555541,555542,555543,555544,555545,555546,555547,555548,555549,555550,555551,555552,556129,556130,556131,556132,556133,556134,556231,556555,556556,556557,556558,556559,556560,556561,556562,556563,556564,556565,556566,556711,556712,556713,556714,556715,556716,556717,556718,556719,556720,556721,556722,556885,557311,557312,557313,557314,557315,557316,557317,557318,557319,557320,557321,557322,557905,557857,558619,558620,558621,558622,558623,558624,558625,558626,558627,558628,558629,558630,557803,558127,558139,558679,558680,558681,558682,558683,558684,560215,560335,560336,560337,560338,560339,560340,560341,560342,560343,560344,560345,560346,560359,560479,561325,561343,561379,561733,561943,562015,562045,562046,562047,562048,562049,562050,562051,562052,562053,562054,562055,562056,561937,562003,562004,562005,562006,562007,562008,562009,562010,562011,562012,562013,562014,561955,562057,562058,562059,562060,562061,562062,562063,562064,562065,562066,562067,562068,562273,562669,563341,563342,563343,563344,563345,563346,563347,563348,563349,563350,563351,563352,563059,563060,563061,563062,563063,563064,563065,563066,563067,563068,563069,563070,563383,563575,563576,563577,563578,563579,563580,563701,564031,564019,564331,564332,564333,564334,564335,564336,564319,564320,564321,564322,564323,564324,564493,564673,564674,564675,564676,564677,564678,564931,565327,565328,565329,565330,565331,565332,565369,565370,565371,565372,565373,565374,565381,565729,566413,566414,566415,566416,566417,566418,566419,566420,566421,566422,566423,566424,566647,566671,566672,566673,566674,566675,566676,566677,566678,566679,566680,566681,566682,567451,567697,567698,567699,567700,567701,567702,568369,568370,568371,568372,568373,568374,568375,568376,568377,568378,568379,568380,568891,568892,568893,568894,568895,568896,569197,569198,569199,569200,569201,569202,570145,570146,570147,570148,570149,570150,570151,570152,570153,570154,570155,570156,570019,570020,570021,570022,570023,570024,570025,570026,570027,570028,570029,570030,570415,570416,570417,570418,570419,570420,570421,570422,570423,570424,570425,570426,570667,570889,571195,571273,571274,571275,571276,571277,571278,571279,571280,571281,571282,571283,571284,571783,571784,571785,571786,571787,571788,571789,571790,571791,571792,571793,571794,571951,571952,571953,571954,571955,571956,572521,572522,572523,572524,572525,572526,573421,574915,574916,574917,574918,574919,574920,574531,575029,575161,575162,575163,575164,575165,575166,575167,575168,575169,575170,575171,575172,575581,575515,576805,576806,576807,576808,576809,576810,576811,576812,576813,576814,576815,576816,579049,579050,579051,579052,579053,579054,579703,581137,581138,581139,581140,581141,581142,582817,583327,583328,583329,583330,583331,583332,583333,583334,583335,583336,583337,583338,584389,585457,585409,585787,585788,585789,585790,585791,585792,585793,585794,585795,585796,585797,585798,586483,586484,586485,586486,586487,586488,586489,586490,586491,586492,586493,586494,586567,587899,588643,589633,589621,589622,589623,589624,589625,589626,589627,589628,589629,589630,589631,589632,590173,590353,590983,591265,591266,591267,591268,591269,591270,591631,591847,591848,591849,591850,591851,591852,591853,591854,591855,591856,591857,591858,592171,592172,592173,592174,592175,592176,592507,594049,594823,596083,596084,596085,596086,596087,596088,598051,598651,598652,598653,598654,598655,598656,599983,602965,604105,604591);

        System.out.println("listA size: "+listA.size() + "listB size: "+listB.size());

        List<Integer> listBNotA = new ArrayList<>();
        for (Integer a: listA) {
            if (listB.contains(a)){
                continue;
            }else{
                listBNotA.add(a);
            }
        }

        List<Integer> listANotB = new ArrayList<>();
        for (Integer b: listB) {
            if (listA.contains(b)){
                continue;
            }else{
                listANotB.add(b);
            }
        }

        System.out.println("listBNotA: "+listBNotA);

        System.out.println("listANotB: "+listANotB);

        List<Integer> list = new ArrayList<>();
        list.add(1);
        list.add(2);
        list.add(3);
        for (Integer i : list) {
            System.out.println(i);
        }

        String a = "";
        boolean t = true;
        int b = 2;



    }


}
